{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,UAAUC,MAAMC,IACzCA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAAST,EAAKC,MAC7BS,EAAQC,OAAOH,EAASI,IAAI,UAC5BC,EAAOF,OAAOH,EAASI,IAAI,SAC3BE,EAASH,OAAOH,EAASI,IAAI,WAEnC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,MAAMC,EAAWD,EAAI,GACL,EAAAE,EAAAC,eAAcF,EAAUN,EAAQG,EAAOE,GAGpDI,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,OAClDvB,EAAA0B,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEhEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBC,QAAQC,IAAI,sBAAoBH,QAAiBC,OACjDvB,EAAA0B,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { createPromise } from './helpers.js';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const formData = new FormData(refs.form);\n  const delay = Number(formData.get('delay'));\n  const step = Number(formData.get('step'));\n  const amount = Number(formData.get('amount'));\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const promise = createPromise(position, delay + step * i);\n\n    promise\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","async","e","preventDefault","formData","FormData","delay1","Number","get","step","amount","i","position1","$49t2I","createPromise","then","position","delay","console","log","Notify","success","catch","failure"],"version":3,"file":"03-promises.ff4c1ee6.js.map"}